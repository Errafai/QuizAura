<style>
  .auth-container {
    min-height: 100vh;
    background: linear-gradient(135deg, #1a1f35 0%, #0f172a 50%, #1e293b 100%);
  }
  
  .auth-card {
    background: rgba(30, 41, 59, 0.5);
    backdrop-filter: blur(12px);
    border-radius: 1rem;
    border: 1px solid rgba(148, 163, 184, 0.1);
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1);
    color: #f8fafc;
    max-width: 400px;
    width: 90%;
  }
  
  .auth-card h3 {
    color: #f8fafc;
    font-weight: 600;
  }
  
  .form-label {
    color: #94a3b8;
    font-weight: 500;
  }
  
  .form-control {
    background: rgba(15, 23, 42, 0.6);
    border: 1px solid rgba(148, 163, 184, 0.2);
    color: #f8fafc;
    border-radius: 0.5rem;
    padding: 0.75rem 1rem;
    transition: all 0.3s ease;
  }
  
  .form-control:focus {
    background: rgba(15, 23, 42, 0.8);
    border-color: #3b82f6;
    box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.2);
    color: #f8fafc;
  }
  
  .form-control.is-invalid {
    border-color: #ef4444;
    background-image: none;
  }
  
  .form-control.is-invalid:focus {
    box-shadow: 0 0 0 2px rgba(239, 68, 68, 0.2);
  }
  
  .error-message {
    background: rgba(239, 68, 68, 0.1);
    border: 1px solid rgba(239, 68, 68, 0.2);
    color: #ef4444;
    padding: 0.75rem 1rem;
    border-radius: 0.5rem;
    margin-bottom: 1rem;
  }
  
  .form-check-input {
    background-color: rgba(15, 23, 42, 0.6);
    border-color: rgba(148, 163, 184, 0.2);
  }
  
  .form-check-input:checked {
    background-color: #3b82f6;
    border-color: #3b82f6;
  }
  
  .form-check-label {
    color: #94a3b8;
  }
  
  .btn-primary {
    background: #3b82f6;
    border: none;
    padding: 0.75rem;
    font-weight: 500;
    transition: all 0.3s ease;
  }
  
  .btn-primary:hover {
    background: #2563eb;
    transform: translateY(-1px);
  }
  
  a {
    color: #3b82f6;
    text-decoration: none;
    transition: color 0.3s ease;
  }
  
  a:hover {
    color: #60a5fa;
  }
  </style>
  
  <div class="container d-flex justify-content-center align-items-center auth-container">
    <div class="card auth-card p-4">
      <h3 class="text-center mb-4">Login</h3>
      <form action="/login" method="POST" novalidate>
        <% if (error) { %>
          <div class="error-message">
            <%= error %>
          </div>
        <% } %>
        
        <div class="mb-3">
          <label for="identifier" class="form-label">Username or Email</label>
          <input type="text" 
                 id="identifier" 
                 class="form-control <%= error ? 'is-invalid' : '' %>" 
                 name="identifier" 
                 placeholder="Enter your username or email" 
                 required/>
        </div>
  
        <div class="mb-3">
          <label for="password" class="form-label">Password</label> 
          <input type="password" 
                 name="password" 
                 class="form-control <%= error ? 'is-invalid' : '' %>" 
                 placeholder="Enter your password" 
                 required>
        </div>
  
        <div class="mb-3 form-check">
          <input type="checkbox" id="remember-me" class="form-check-input" name="rememberMe">
          <label for="remember-me" class="form-check-label">Remember Me</label>
        </div> 
  
        <p class="mt-3">
          <a href="#">Forgot your password?</a>
        </p>
  
        <div class="d-grid">
          <button type="submit" class="btn btn-primary">Login</button>
        </div>
  
        <p class="text-center mt-3">
          Don't have an account?
          <a href="/register">Sign Up</a>
        </p>
      </form>
    </div>
  </div>
  
  <script>
  (function() {
    'use strict'
    const forms = document.querySelectorAll('form')
    
    forms.forEach(form => {
      form.addEventListener('submit', event => {
        if (!form.checkValidity()) {
          event.preventDefault()
          event.stopPropagation()
          
          // Add red border to empty required fields
          form.querySelectorAll('input[required]').forEach(input => {
            if (!input.value) {
              input.classList.add('is-invalid')
            }
          })
        }
      })
      
      // Remove invalid class on input
      form.querySelectorAll('input').forEach(input => {
        input.addEventListener('input', () => {
          input.classList.remove('is-invalid')
        })
      })
    })
  })()
  </script>